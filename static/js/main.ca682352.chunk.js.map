{"version":3,"sources":["Data/categories.js","components/Header/Header.js","components/Meanings/Meanings.js","App.js","index.js"],"names":["categories","value","label","sort","a","b","Header","language","setLanguage","word","setWord","lightMode","darkTheme","createTheme","palette","primary","main","mode","className","ThemeProvider","theme","TextField","onChange","e","target","select","lang","countries","map","MenuItem","Meanings","meanings","src","phonetics","audio","controls","data","items","definitions","def","definition","example","App","useState","setMeanings","setLightMode","DarkTheme","styled","Switch","width","height","padding","margin","transform","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","content","position","left","top","backgroundRepeat","backgroundPosition","borderRadius","dictionaryAPI","axios","get","console","log","useEffect","Container","maxWidth","checked","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca682352.chunk.js","sourcesContent":["const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n];\r\n\r\ncategories.sort((a, b) => (a.value > b.value) ? 1 : ((b.value > a.value) ? -1 : 0));\r\n\r\nexport default categories;\r\n","import React from \"react\";\r\nimport { createTheme, MenuItem, TextField, ThemeProvider } from \"@mui/material\";\r\nimport countries from \"../../Data/categories\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ language, setLanguage, word, setWord, lightMode }) => {\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: lightMode ? \"#000\" : \"#FFF\",\r\n            },\r\n            mode: lightMode ? \"dark\" : 'light',\r\n        },\r\n    });\r\n\r\n    const resetSearchWord = (lang) => {\r\n        setLanguage(lang);\r\n        setWord(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"title-container\">\r\n                <span className=\"title\">{word ? word : \"Dictionary\"}</span>\r\n            </div>\r\n            <div className=\"inputs\">\r\n\r\n                <ThemeProvider theme={darkTheme}>\r\n                    <TextField\r\n                        className=\"search\"\r\n                        label=\"Search a Word\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        select\r\n                        label=\"Language\"\r\n                        className=\"select\"\r\n                        value={language}\r\n                        onChange={(e) => resetSearchWord(e.target.value)}\r\n\r\n                    >\r\n                        {countries.map((lang) => (\r\n                            <MenuItem key={lang.label} value={lang.label}>\r\n                                {lang.value}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </ThemeProvider>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"./Meanings.css\";\r\n\r\nconst Meanings = ({ word, language, meanings, lightMode }) => {\r\n    return (\r\n        <div className=\"meanings\">\r\n\r\n            {meanings[0] && word && language === \"en\" && (\r\n                <audio src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio} className=\"audio\" controls>\r\n                    Your browser doesn't support audio element.\r\n                </audio>\r\n            )}\r\n\r\n            {\r\n                word === \"\"\r\n                    ? (\r\n                        <span className=\"subTitle\">Start by typing a word in the search field</span>\r\n                    ) : (\r\n                        <>\r\n                            {meanings.map((data) =>\r\n                                data.meanings.map((items) =>\r\n                                    items.definitions.map((def) => (\r\n                                        <div className={lightMode ? \"singleMeaningDark\" : \"singleMeaningLight\"}>\r\n                                            {def.definition && (\r\n                                                <span>\r\n                                                    <b>Definition: </b>\r\n                                                    <span className=\"definition\">{def.definition}</span>\r\n                                                </span>\r\n                                            )}\r\n                                            {def.example && (\r\n                                                <span>\r\n                                                    <br />\r\n                                                    <b>Example: </b>\r\n                                                    <span>{def.example}</span>\r\n\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                    ))\r\n                                )\r\n                            )}\r\n                        </>\r\n                    )\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Meanings;\r\n","import { useState, useEffect } from \"react\";\nimport { Container } from \"@mui/material\";\n\nimport { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\n\nimport Header from \"./components/Header/Header\";\nimport Meanings from \"./components/Meanings/Meanings\";\nimport axios from \"axios\";\nimport './App.css';\n\nfunction App() {\n\n  const [meanings, setMeanings] = useState([]);\n  const [word, setWord] = useState(\"\");\n  const [language, setLanguage] = useState(\"en\");\n  const [lightMode, setLightMode] = useState(false);\n\n  const DarkTheme = styled(Switch)(({ theme }) => ({\n    width: 62,\n    height: 34,\n    padding: 7,\n    '& .MuiSwitch-switchBase': {\n      margin: 1,\n      padding: 0,\n      transform: 'translateX(6px)',\n      '&.Mui-checked': {\n        color: '#fff',\n        transform: 'translateX(22px)',\n        '& .MuiSwitch-thumb:before': {\n          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n            '#fff',\n          )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n        },\n        '& + .MuiSwitch-track': {\n          opacity: 1,\n          backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n        },\n      },\n    },\n    '& .MuiSwitch-thumb': {\n      backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n      width: 32,\n      height: 32,\n      '&:before': {\n        content: \"''\",\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        left: 0,\n        top: 0,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n          '#fff',\n        )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n      },\n    },\n    '& .MuiSwitch-track': {\n      opacity: 1,\n      backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n      borderRadius: 20 / 2,\n    },\n  }));\n\n  const dictionaryAPI = async () => {\n    try {\n      const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${language}/${word}`);\n      setMeanings(data.data);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    dictionaryAPI();\n  }, [word, language]);\n\n  return (\n    <div className={lightMode ? \"AppDarkMode\" : \"AppLightMode\"}>\n\n      <Container className=\"Container\" maxWidth=\"md\">\n\n        <div className=\"themeSwitch\">\n          <span>{lightMode ? \"Dark mode\" : \"Light Mode\"}</span>\n          <DarkTheme checked={lightMode} onChange={() => setLightMode(!lightMode)} />\n        </div>\n\n        <Header\n          language={language}\n          setLanguage={setLanguage}\n          word={word}\n          setWord={setWord}\n          lightMode={lightMode}\n        />\n\n        <Meanings\n          word={word}\n          language={language}\n          meanings={meanings}\n          lightMode={lightMode}\n        />\n\n      </Container>\n\n      <div className=\"visit-me\">\n        <a href=\"https://www.alexiglesias.in/#work\" target=\"__blank\" className=\"visit-me-link\">Go back</a>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}